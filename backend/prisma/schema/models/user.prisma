model VerificationToken {
    identifier String
    expires    DateTime
    token      String

    @@id([identifier, token])
    @@map("verification_token")
}

model Account {
    id                Int     @id @default(autoincrement())
    userId            Int     @map("userId")
    type              String
    provider          String
    providerAccountId String  @map("providerAccountId")
    refresh_token     String? @map("refresh_token")
    access_token      String? @map("access_token")
    expires_at        BigInt? @map("expires_at")
    id_token          String? @map("id_token")
    scope             String?
    session_state     String? @map("session_state")
    token_type        String? @map("token_type")

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@map("accounts")
}

model Session {
    id           Int      @id @default(autoincrement())
    userId       Int      @map("userId")
    expires      DateTime
    sessionToken String   @map("sessionToken")

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@map("sessions")
}

model User {
    id            Int       @id @default(autoincrement())
    name          String?
    email         String?
    emailVerified DateTime? @map("emailVerified")
    image         String?

    accounts Account[]
    sessions Session[]

    @@map("users")
}
